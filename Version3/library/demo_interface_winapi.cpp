// Auto-generated C++ WinAPI GUI code from HTML sketch
std::vector<GuiElement*> elements;
int y = 10;
elements.push_back(new GuiLabel(L"Nom:", /*id*/, 10, y, 200, 24)); y += 30;
elements.push_back(new GuiLabel(L"Mot de passe:", /*id*/, 10, y, 200, 24)); y += 30;
elements.push_back(new GuiLabel(L"Choix:", /*id*/, 10, y, 200, 24)); y += 30;
elements.push_back(new GuiLabel(L"Liste:", /*id*/, 10, y, 200, 24)); y += 30;
elements.push_back(new GuiLabel(L"Activer", /*id*/, 10, y, 200, 24)); y += 30;
elements.push_back(new GuiLabel(L"Choix A", /*id*/, 10, y, 200, 24)); y += 30;
elements.push_back(new GuiLabel(L"Choix B", /*id*/, 10, y, 200, 24)); y += 30;
elements.push_back(new GuiLabel(L"Valeur:", /*id*/, 10, y, 200, 24)); y += 30;
auto edit_input1 = new GuiEdit(L"John Doe", /*input1*/); elements.push_back(edit_input1); edit_input1->Create(parent, 10, y, 200, 24); y += 30;
auto pass_pass1 = new GuiEdit(L"", /*pass1*/, true); elements.push_back(pass_pass1); pass_pass1->Create(parent, 10, y, 200, 24); y += 30;
auto check_check1 = new GuiCheckBox(L"check1", /*check1*/); elements.push_back(check_check1); check_check1->Create(parent, 10, y, 100, 24); y += 30;
auto radio_radioA = new GuiRadioButton(L"radioA", /*radioA*/, 10, y, 100, 24); elements.push_back(radio_radioA); radio_radioA->Create(parent); y += 30;
auto radio_radioB = new GuiRadioButton(L"radioB", /*radioB*/, 10, y, 100, 24); elements.push_back(radio_radioB); radio_radioB->Create(parent); y += 30;
auto slider_slider1 = new GuiSlider(/*slider1*/, 0, 100, 50); elements.push_back(slider_slider1); slider_slider1->Create(parent, 10, y, 200, 24); y += 30;
auto combo_combo1 = new GuiComboBox(/*combo1*/); elements.push_back(combo_combo1); combo_combo1->Create(parent, 10, y, 120, 24);
combo_combo1->AddItem(L"Option 1");
combo_combo1->AddItem(L"Option 2");
combo_combo1->AddItem(L"Option 3");
y += 30;
auto list_list1 = new GuiListBox(/*list1*/); elements.push_back(list_list1); list_list1->Create(parent, 10, y, 120, 60);
list_list1->AddItem(L"Item 1");
list_list1->AddItem(L"Item 2");
list_list1->AddItem(L"Item 3");
y += 70;
auto group_settings = new GuiGroupBox(L"settings", /*settings*/, 220, 10, 150, 120); elements.push_back(group_settings); group_settings->Create(parent);
auto tab_tab1 = new GuiTab(/*tab1*/, 10, y, 200, 40, TabDock::Top); elements.push_back(tab_tab1);
tab_tab1->AddPage(L"Welcome");
tab_tab1->AddPage(L"Settings");
tab_tab1->AddPage(L"Help");
tab_tab1->Create(parent); y += 50;
auto progress_progress1 = new GuiProgressBar(/*progress1*/, 10, y, 200, 24, 0, 100, 25); elements.push_back(progress_progress1); progress_progress1->Create(parent); y += 30;
auto btn_0 = new GuiButton(L"Welcome", /*0*/, 10, y, 60, 24); elements.push_back(btn_0); btn_0->Create(parent); y += 30;
auto btn_0 = new GuiButton(L"Settings", /*0*/, 10, y, 60, 24); elements.push_back(btn_0); btn_0->Create(parent); y += 30;
auto btn_0 = new GuiButton(L"Help", /*0*/, 10, y, 60, 24); elements.push_back(btn_0); btn_0->Create(parent); y += 30;
auto btn_btnOk = new GuiButton(L"OK", /*btnOk*/, 10, y, 60, 24); elements.push_back(btn_btnOk); btn_btnOk->Create(parent); y += 30;
auto btn_btnBuy = new GuiButton(L"Buy", /*btnBuy*/, 10, y, 60, 24); elements.push_back(btn_btnBuy); btn_btnBuy->Create(parent); y += 30;
auto btn_btnSell = new GuiButton(L"Sell", /*btnSell*/, 10, y, 60, 24); elements.push_back(btn_btnSell); btn_btnSell->Create(parent); y += 30;
auto btn_btnCancel = new GuiButton(L"Cancel", /*btnCancel*/, 10, y, 60, 24); elements.push_back(btn_btnCancel); btn_btnCancel->Create(parent); y += 30;
